{"version":3,"sources":["components/Navbar/Navbar.js","modals/ModalDeleteContact/ModalDeleteContact.js","components/Home/Home.js","components/AddContact/AddContact.js","components/AddInputs/AddInputs.js","modals/ModalDeleteInput/ModalDeleteInput.js","components/EditContact/EditContact.js","components/ShowContact/ShowContact.js","modals/ModalGreeting/ModalGreeting.js","App.js","reportWebVitals.js","redux/reducers/contactReducer.js","index.js"],"names":["Navbar","className","to","Modal","id","modal","dispatch","useDispatch","onClick","e","target","classList","contains","handleClose","type","payload","err","console","log","deleteContact","Home","useState","setModal","currentId","setCurrentId","contactList","useSelector","state","icon","faPlus","length","map","contact","Object","keys","entries","input","name","value","faIdCard","size","faEdit","faTrash","AddContact","setName","phone","setPhone","history","useHistory","onSubmit","preventDefault","dataForDispatch","uuidv4","push","htmlFor","placeholder","onChange","currentTarget","required","autoComplete","AddInputs","isVisibleAdditionalInputs","setIsVisibleAdditionalInputs","nameOfTheInput","setNameOfTheInput","valueOfTheInput","setValueOfTheInput","useParams","listOfContacts","currentContact","find","faTimes","updatedContact","handleSubmit","toLowerCase","ModalDeleteInput","newCurrentContact","deleteInput","EditContact","setCurrentContact","votedContactKey","setVotedContactKey","inputCache","setInputCache","useEffect","submitInputs","newData","changeInput","onFocus","_","isEqual","prev","voteCurrentContactKey","disabled","slice","faUndo","ShowContact","ModalGreeting","greetingModal","App","setGreetingModal","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","contactReducer","action","deletedContactState","filter","addedInputState","updatedInputState","updatedState","deletedInputState","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a4ff29d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navbar.scss'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <Link to=\"/contacts\" className=\"navbar-brand\">\r\n        Contacts\r\n      </Link>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport './ModalDeleteContact.scss'\r\n\r\nconst Modal = ({id, modal}) => {\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst deleteContact = () => {\r\n  try {\r\n    dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    modal(false);\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nconst handleClose = e => e.target.classList.contains('modal') && modal(false);\r\n\r\n  return (\r\n    <div className=\"modal\" onClick={(e) => handleClose(e)}>\r\n      <div className=\"modal-content\">\r\n        Are you sure?\r\n        <div className =\"modal-content__buttons\">\r\n          <button \r\n            className=\"modal-content__button modal-content__button-delete\" \r\n            onClick={() => deleteContact()}\r\n            >\r\n            Delete\r\n          </button>\r\n          <button \r\n            className=\"modal-content__button modal-content__button-cancel\" \r\n            onClick={() => modal(false)}\r\n            >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport Modal from '../../modals/ModalDeleteContact/ModalDeleteContact'\r\n\r\nimport { faEdit, faTrash, faPlus, faIdCard } from '@fortawesome/fontawesome-free-solid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Home = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [currentId, setCurrentId] = useState('')\r\n\r\n  const contactList = useSelector(state => state);\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/add\">\r\n        <button className=\"add-contact-btn\">\r\n          <FontAwesomeIcon icon={faPlus}/> Add a new contact\r\n        </button>\r\n      </Link>\r\n      <div className=\"container\">\r\n        <div className=\"contact\">\r\n        <h1 className='contact_article'>CONTACTS</h1>\r\n        <ul className=\"contact__list\">\r\n          {contactList.length ? contactList.map(contact => (\r\n            Object.keys(contact).length > 1 && (\r\n              <li key={contact.id} className=\"contact__item\">\r\n\r\n                <div className=\"contact__item-info\" >\r\n                  <ul className=\"contact__inputs-list\">\r\n                    {Object.entries(contact).map(input => {\r\n                      const [name, value] = input;\r\n                      return (\r\n                        name !== 'id' && (\r\n                          <li key={name} className=\"contact__inputs-item\">\r\n                          <div className=\"contact__item-name\">\r\n                            {name}\r\n                          </div>\r\n                          <div className=\"contact__item-value\">\r\n                            {value}\r\n                          </div>\r\n                        </li>\r\n                        )\r\n                      )\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n\r\n                <div className=\"contact__item-buttons\">\r\n              <Link to={`/profile/${contact.id}`} className=\"icon-btn contact__item-profile\">\r\n                <FontAwesomeIcon icon={faIdCard} size=\"lg\"/>\r\n              </Link>\r\n\r\n              <Link to={`/edit/${contact.id}`} className=\"icon-btn contact__item-edit\">\r\n                <FontAwesomeIcon icon={faEdit} size=\"lg\"/>\r\n              </Link>\r\n\r\n              <FontAwesomeIcon\r\n                icon={faTrash}\r\n                className=\"icon-btn contact__item-delete\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                  setModal(true)\r\n                  setCurrentId(contact.id)\r\n                }}\r\n              />\r\n            </div>\r\n          </li>)\r\n          )) : (<h3>Contact list is empty</h3>)}\r\n        </ul>\r\n        </div>\r\n        {modal && (<Modal id={currentId} modal={setModal}/> )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport './AddContact.scss'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst AddContact = () => {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const dataForDispatch = {\r\n      id: uuidv4(),\r\n      name,\r\n      phone,\r\n    }\r\n\r\n    try {\r\n      dispatch({\r\n        type:'ADD_CONTACT',\r\n        payload: dataForDispatch\r\n      })\r\n      history.push('/contacts')\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div className=\"container\">\r\n        <h1 className=\"add-contact__title\">Add a new contact</h1>\r\n          <form className=\"add-contact__form\" onSubmit={handleSubmit}>\r\n\r\n            <div className=\"form-contact-group\">\r\n              <label htmlFor=\"name\" className=\"add-contact__label\">\r\n                Name<br/>\r\n                <input \r\n                  id=\"name\"\r\n                  className=\"add-contact__input\"\r\n                  type=\"text\" \r\n                  placeholder=\"John Doe\"\r\n                  value={name}\r\n                  onChange={e => setName(e.currentTarget.value)}\r\n                  required\r\n                  autoComplete=\"off\"\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-contact-group\">\r\n              <label htmlFor=\"phone\" className=\"add-contact__label\">\r\n                Phone number<br/>\r\n                <input \r\n                  id= \"phone\"\r\n                  className=\"add-contact__input\" \r\n                  type=\"text\" \r\n                  placeholder=\"+380631231212\"\r\n                  value={phone}\r\n                  onChange={e => setPhone(e.currentTarget.value)}\r\n                  required\r\n                  autoComplete=\"off\"\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <button type=\"submit\" className={name && phone ? \"add-contact__submit\" : \"add-contact__submit add-contact__submit--off\"}>\r\n              Add contact\r\n            </button>\r\n\r\n          </form>\r\n      </div> \r\n    );\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport './AddInputs.scss'\r\nimport { faTimes } from '@fortawesome/fontawesome-free-solid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst AddInputs = () => {\r\n    const [isVisibleAdditionalInputs, setIsVisibleAdditionalInputs] = useState(false);\r\n    const [nameOfTheInput, setNameOfTheInput] = useState('');\r\n    const [valueOfTheInput, setValueOfTheInput] = useState('');\r\n\r\n    const {id} = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const listOfContacts = useSelector(state => state);\r\n\r\n    const toggleAdditionalInputs = () => {\r\n        setIsVisibleAdditionalInputs(isVisibleAdditionalInputs => !isVisibleAdditionalInputs);\r\n    }\r\n    \r\n    const currentContact = listOfContacts.find(contact => contact.id === id);\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      const updatedContact = {\r\n        ...currentContact,\r\n        [nameOfTheInput]: valueOfTheInput,\r\n      }\r\n    \r\n       try {\r\n        dispatch({type: 'ADD_CONTACT_INPUT', payload: updatedContact});\r\n        setNameOfTheInput('');\r\n        setValueOfTheInput('');\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-inputs\">\r\n          \r\n            <button onClick={() => toggleAdditionalInputs()} className={isVisibleAdditionalInputs ? 'add-inputs__cancel-btn' : 'add-inputs__toggle-btn'}>\r\n                {isVisibleAdditionalInputs ? (<FontAwesomeIcon icon={faTimes} className=\"add-inputs__cancel-icon\"/>) : `Add info to contact`}\r\n            </button>\r\n            {isVisibleAdditionalInputs && (\r\n                <form className=\"add-inputs__form\" onSubmit={(e) => handleSubmit(e)}>\r\n            <div className=\"add-inputs__group\">\r\n              <label htmlFor=\"value\" className=\"add-inputs__label\">\r\n                Name of the input<br/>\r\n                <input className=\"add-inputs__input\"\r\n                  id= \"value\" \r\n                  type=\"text\"\r\n                  value={nameOfTheInput}\r\n                  placeholder=\"Example: Email\"\r\n                  onChange={(e) =>setNameOfTheInput(e.currentTarget.value.toLowerCase())}\r\n                  required\r\n                  autoComplete=\"off\"\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"add-inputs__group\">\r\n              <label htmlFor=\"name\" className=\"add-inputs__label\">\r\n                Value<br/>\r\n                <input \r\n                  id= \"name\" \r\n                  type=\"text\"\r\n                  className=\"add-inputs__input\"\r\n                  value={valueOfTheInput}\r\n                  placeholder=\"Example: test@gmail.com\"\r\n                  onChange={(e) => setValueOfTheInput(e.currentTarget.value)}\r\n                  required\r\n                  autoComplete=\"off\"\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <button \r\n              type= \"submit\" \r\n              className={nameOfTheInput && valueOfTheInput ? \"add-inputs__submit\" : \"add-inputs__submit add-inputs__submit-off\"}>\r\n                Add to contact\r\n            </button>\r\n          </form>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddInputs;","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst ModalDeleteInput = ({ modal, name, currentContact }) => {\r\n\r\nconst dispatch = useDispatch();\r\n\r\n const deleteInput = () => {\r\n   const newCurrentContact = {...currentContact};\r\n   delete newCurrentContact[name];\r\n\r\n    dispatch({type: 'DELETE_CONTACT_INPUT', payload: newCurrentContact});\r\n    modal(false);\r\n   }\r\n\r\nconst handleClose = e => e.target.classList.contains('modal') && modal(false);\r\n\r\n  return (\r\n    <div className=\"modal\" onClick={(e) => handleClose(e)}>\r\n      <div className=\"modal-content\">\r\n        Are you sure?\r\n        <div className =\"modal-content__buttons\">\r\n          <button \r\n            className=\"modal-content__button modal-content__button-delete\" \r\n            onClick={(e) => deleteInput()}\r\n            >\r\n            Delete\r\n          </button>\r\n          <button \r\n            className=\"modal-content__button modal-content__button-cancel\"\r\n            onClick={() => modal(false)}\r\n            >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalDeleteInput;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport AddInputs from '../AddInputs/AddInputs';\r\nimport './EditContact.scss'\r\nimport ModalDeleteInput from '../../modals/ModalDeleteInput/ModalDeleteInput'\r\n\r\nimport _ from 'lodash'\r\n\r\nimport { faTrash, faUndo } from '@fortawesome/fontawesome-free-solid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst EditContact = () => {\r\n  let [currentContact, setCurrentContact] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [votedContactKey, setVotedContactKey] = useState('');\r\n  const [inputCache, setInputCache] = useState([]);\r\n\r\n  const {id} = useParams();\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const contactList = useSelector(state => state);\r\n\r\n  useEffect(() => {\r\n    setCurrentContact(contactList.find(contact => contact.id === id));\r\n  }, [contactList, id])\r\n\r\n  const voteCurrentContactKey = (name) => {\r\n    setModal(true);\r\n    setVotedContactKey(name);\r\n  }\r\n\r\n  const submitInputs = (e) => {\r\n    e.preventDefault();\r\n    dispatch({type: 'UPDATE_CONTACT_INPUT', payload: currentContact});\r\n    history.push('/contacts');\r\n  }\r\n\r\n  const changeInput = (e) => {\r\n    const newData = {...currentContact}\r\n    newData[e.target.name] = e.target.value;\r\n    setCurrentContact(newData);\r\n  }\r\n\r\n  const saveInputValue = () => {\r\n    if (_.isEqual(inputCache[inputCache.length - 1], currentContact)) {\r\n      \r\n    } else {\r\n      setInputCache(prev => [...prev, currentContact]);\r\n    }\r\n  }\r\n\r\n  const handleUndo = () => {\r\n    setCurrentContact(inputCache[inputCache.length - 1]);\r\n    setInputCache(inputCache.slice(0, -1));\r\n  }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {currentContact ? (\r\n            <div className=\"edit-contact\">\r\n            <Link to={`/profile/${id}`} className=\"edit-contact__title\"><h3>Edit contact ID {id}</h3></Link>\r\n            <form onSubmit={(e) => submitInputs(e)} id=\"myForm\">\r\n              {Object.entries(currentContact).map(input => {\r\n                const [name] = input;\r\n                return (\r\n                  name !== 'id' && (\r\n                    <div className=\"edit-contact__group\">\r\n                      <label className='edit-contact__label'>              \r\n                        {name}\r\n                        <input \r\n                          className=\"edit-contact__input\" \r\n                          name={name} \r\n                          value={currentContact[name]} \r\n                          onChange={(e) => changeInput(e)}\r\n\r\n                          onFocus={(e) => saveInputValue(e)}\r\n                          />\r\n      \r\n                      </label>\r\n                      <FontAwesomeIcon \r\n                        icon={faTrash} \r\n                        className=\"edit-contact__input-delete\"\r\n                        onClick={() => voteCurrentContactKey(name)}\r\n                      />\r\n                      \r\n                      { modal && (\r\n                    <ModalDeleteInput\r\n                      id={id}\r\n                      modal={setModal} \r\n                      name={votedContactKey}\r\n                      currentContact={currentContact}\r\n                    />\r\n                    )}\r\n                    </div>\r\n                  )    \r\n                )   \r\n              })\r\n            }\r\n                \r\n              <div className=\"edit-contact__buttons\">\r\n              <button type =\"submit\" className=\"edit-contact__button edit-contact__button-apply\" >\r\n                Apply\r\n              </button>\r\n              <button\r\n                type= \"button\" \r\n                className=\"edit-contact__button edit-contact__button-cancel\"\r\n                onClick={() => history.push('/contacts')}\r\n                >\r\n                Cancel\r\n              </button>\r\n                <button \r\n                type= \"button\" className='edit-contact__button edit-contact__button-undo'\r\n                disabled={inputCache.length < 1}\r\n                onClick={() => handleUndo()}\r\n                >\r\n                <FontAwesomeIcon \r\n                  icon={faUndo} \r\n                  className=\"edit-contact__input-undo\"\r\n                />\r\n                </button>\r\n\r\n            </div>\r\n            </form>\r\n            <AddInputs/>\r\n            </div>\r\n        ) : (\r\n          <h3>Contact {id} has been deleted</h3>\r\n        )}\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default EditContact\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { useSelector } from 'react-redux'\r\nimport './ShowContact.scss'\r\n\r\nconst ShowContact = () => {\r\n  const [currentContact, setCurrentContact] = useState({})\r\n\r\n  const contactList = useSelector(state => state);\r\n\r\n  const {id} = useParams();\r\n\r\n  useEffect(() => {\r\n      setCurrentContact(contactList.find(contact => contact.id === id));\r\n  }, [contactList, id])\r\n\r\n  return (\r\n    <>\r\n      <h4>Contact ID {id}</h4>\r\n        <div className=\"show-contact\">\r\n        <ul className=\"show-contact__profile\">\r\n          {Object.entries(currentContact).slice(1).map(input => {\r\n            const [name, value] = input;\r\n            return (\r\n              <li className=\"show-contact__item\">\r\n                <div className=\"show-contact__name\">\r\n                  {name}\r\n                </div>\r\n                <div className=\"show-contact__value\">\r\n                  {value}\r\n                </div>\r\n              </li>\r\n            )\r\n          })}\r\n          </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ShowContact\r\n","import React from 'react'\r\nimport './ModalGreeting.scss'\r\n\r\nconst ModalGreeting = ({ greetingModal }) => {\r\n\r\n    return (\r\n\t\t\t<div className='greeting-modal'>\r\n\t\t\t\t<div className='greeting-modal__content'>\r\n\t\t\t\t\t<h1 className='greeting-modal__title'>Welcome to Contact List app!</h1>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"greeting-modal__button\"\r\n\t\t\t\t\t\t// it would be better push into localStorage\r\n\t\t\t\t\t\tonClick={() => greetingModal(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGet Started\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n    )\r\n}\r\n\r\nexport default ModalGreeting\r\n","import React, { useState } from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Switch, Route} from 'react-router-dom'\nimport Home from './components/Home/Home'\nimport AddContact from './components/AddContact/AddContact';\nimport EditContact from './components/EditContact/EditContact';\nimport ShowContact from './components/ShowContact/ShowContact';\n\nimport ModalGreeting from './modals/ModalGreeting/ModalGreeting';\n\nconst App = () => {\n  const [greetingModal, setGreetingModal] = useState(true)\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Switch>\n        <Route exact path=\"/contacts\" component={Home}/>\n\n        <Route path=\"/add\" component={AddContact}/>\n\n        <Route path=\"/edit/:id\" component={EditContact}/>\n\n        <Route path=\"/profile/:id\" component={ShowContact}/>\n      </Switch>\n      {greetingModal && (<ModalGreeting greetingModal={setGreetingModal}/>)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = [];\r\n\r\nconst contactReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'ADD_CONTACT':\r\n      state = [...state, action.payload];\r\n      return state;\r\n\r\n    case 'DELETE_CONTACT':\r\n      const deletedContactState = state.filter(contact => contact.id !== action.payload)\r\n      state = deletedContactState;\r\n      return state;\r\n\r\n    case 'ADD_CONTACT_INPUT': \r\n      const addedInputState = state.map(contact => contact.id === action.payload.id \r\n      ? action.payload : contact)\r\n      console.log(action.payload)\r\n      state = addedInputState;\r\n      return state;\r\n\r\n    case 'UPDATE_CONTACT_INPUT':\r\n      const updatedInputState = state.map(contact => contact.id === action.payload.id \r\n      ? action.payload : contact)\r\n      state = updatedInputState;\r\n      return state;\r\n\r\n    case 'DELETE_CONTACT_INPUT':\r\n      if (Object.keys(action.payload).length === 1) {\r\n        const updatedState = state.filter(contact => contact.id !== action.payload.id)\r\n        state = updatedState;\r\n        return state;\r\n      } else {\r\n        const deletedInputState = state.map(contact => contact.id === action.payload.id \r\n        ? action.payload : contact)\r\n        state = deletedInputState;\r\n        return state;\r\n      }\r\n      \r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default contactReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport contactReducer from './redux/reducers/contactReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(contactReducer, composeWithDevTools())\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router> \n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}